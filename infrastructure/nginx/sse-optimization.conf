# Production-optimized Nginx configuration for Server-Sent Events (SSE)
# Place this in your nginx.conf or include it from your main configuration

# Upstream servers for load balancing SSE connections
upstream generation_service {
    # Use ip_hash for sticky sessions to maintain SSE connections
    # This ensures clients reconnect to the same server instance
    ip_hash;

    server generation-service-1:8000 weight=3 max_fails=3 fail_timeout=30s;
    server generation-service-2:8000 weight=3 max_fails=3 fail_timeout=30s;
    server generation-service-3:8000 weight=2 max_fails=3 fail_timeout=30s backup;
}

# SSE-specific location configuration
server {
    listen 80;
    listen 443 ssl http2;
    server_name your-domain.com;

    # SSL configuration (if using HTTPS)
    ssl_certificate /etc/ssl/certs/your-domain.crt;
    ssl_certificate_key /etc/ssl/private/your-domain.key;

    # Basic security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Content Security Policy for SSE
    add_header Content-Security-Policy "
        default-src 'self';
        connect-src 'self' wss: ws: https: http:;
        script-src 'self' 'unsafe-inline' 'unsafe-eval';
        style-src 'self' 'unsafe-inline';
        img-src 'self' data: https:;
        font-src 'self' data:;
    ";

    # SSE endpoint configuration
    location /api/v1/generations/ {
        # Proxy to generation service
        proxy_pass http://generation_service;
        proxy_http_version 1.1;

        # Essential headers for SSE
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Preserve Last-Event-ID header for reconnection
        proxy_set_header Last-Event-ID $http_last_event_id;

        # SSE-specific optimizations
        proxy_buffering off;                    # Disable buffering for real-time streaming
        proxy_cache off;                        # Disable caching for dynamic content
        proxy_read_timeout 300s;               # Extended timeout for long-lived connections
        proxy_connect_timeout 5s;              # Quick connection timeout
        proxy_send_timeout 300s;               # Extended send timeout

        # HTTP/1.1 keep-alive for persistent connections
        proxy_set_header Connection '';

        # Chunk transfer encoding for streaming
        chunked_transfer_encoding on;

        # CORS headers for SSE
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Last-Event-ID, Cache-Control, Authorization, Content-Type" always;
        add_header Access-Control-Expose-Headers "Last-Event-ID" always;
        add_header Access-Control-Max-Age 86400 always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Last-Event-ID, Cache-Control, Authorization, Content-Type" always;
            add_header Access-Control-Max-Age 86400 always;
            return 204;
        }

        # Cache control for SSE
        add_header Cache-Control "no-cache, no-store, must-revalidate, no-transform" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # Disable gzip compression for SSE (interferes with real-time streaming)
        gzip off;

        # Set specific headers for EventSource endpoints
        location ~ ^/api/v1/generations/[^/]+/events$ {
            # All the above proxy settings apply

            # EventSource-specific headers
            add_header Content-Type "text/event-stream; charset=utf-8" always;
            add_header X-Accel-Buffering "no";  # Disable nginx buffering

            # Extended timeouts for SSE streams
            proxy_read_timeout 600s;            # 10 minutes for long generations
            proxy_send_timeout 600s;

            # Connection keep-alive
            proxy_set_header Connection "keep-alive";

            # Ensure no caching at any level
            add_header Cache-Control "no-cache, no-store, must-revalidate, no-transform" always;
        }
    }

    # Regular API endpoints (non-SSE)
    location /api/ {
        proxy_pass http://generation_service;
        proxy_http_version 1.1;

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';

        # Standard timeouts
        proxy_read_timeout 30s;
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;

        # Enable caching for non-SSE API calls
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # CORS for regular API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Static assets with caching
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        gzip_static on;
    }

    # Frontend application
    location / {
        root /var/www/html;
        try_files $uri $uri/ /index.html;

        # Security headers for frontend
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
    }
}

# Rate limiting for SSE connections (optional)
http {
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=sse_connections:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api_calls:10m rate=100r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=per_ip:10m;

    server {
        # Apply rate limiting
        location /api/v1/generations/ {
            # Allow burst of 5 SSE connections, delay excess
            limit_req zone=sse_connections burst=5 delay=3;

            # Limit concurrent connections per IP
            limit_conn per_ip 10;

            # Rest of SSE configuration...
        }

        location /api/ {
            # Higher rate limit for regular API calls
            limit_req zone=api_calls burst=20 nodelay;
            limit_conn per_ip 20;

            # Rest of API configuration...
        }
    }
}

# Additional optimizations in main nginx.conf context
http {
    # Enable keepalive connections to upstream
    upstream generation_service {
        keepalive 32;  # Keep 32 connections alive
        keepalive_requests 1000;  # Reuse connections for 1000 requests
        keepalive_timeout 60s;    # Keep connections alive for 60s
    }

    # Optimize for high-performance SSE
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Worker processes and connections
    worker_processes auto;
    worker_connections 1024;

    # Event handling
    use epoll;  # Linux
    # use kqueue;  # FreeBSD/macOS

    # Buffer sizes for better memory usage
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip configuration (disabled for SSE endpoints)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
}

# Health check configuration for load balancer
server {
    listen 8080;
    server_name localhost;

    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }

    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
