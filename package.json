{
  "name": "ai-script-generator-v3",
  "version": "3.0.0",
  "description": "AI Script Generator v3.0 - Complete Microservices Suite",
  "private": true,
  "type": "module",
  "scripts": {
    "typecheck": "npm run typecheck:frontend && npm run typecheck:backends",
    "typecheck:frontend": "cd frontend && npm run typecheck",
    "typecheck:backends": "npm run typecheck:generation && npm run typecheck:project && npm run typecheck:core",
    "typecheck:generation": "cd services/generation-service && python3 -m mypy src --strict",
    "typecheck:project": "cd services/project-service && python3 -m mypy src --strict",
    "typecheck:core": "cd shared/core && python3 -m mypy src --strict",
    "precommit:install": "pre-commit install",
    "precommit:run": "pre-commit run --all-files",
    "precommit:update": "pre-commit autoupdate",
    "type:watch": "concurrently \"npm run type:watch:frontend\" \"npm run type:watch:backends\"",
    "type:watch:frontend": "cd frontend && npm run type:watch",
    "type:watch:backends": "concurrently \"cd services/generation-service && python -m mypy src --strict --watch\" \"cd services/project-service && python -m mypy src --strict --watch\" \"cd shared/core && python -m mypy src --strict --watch\"",
    "build": "npm run typecheck && npm run build:all",
    "build:all": "npm run build:frontend && npm run build:backends",
    "build:frontend": "cd frontend && npm run build",
    "build:backends": "npm run build:generation && npm run build:project && npm run build:core",
    "build:generation": "cd services/generation-service && python -m build",
    "build:project": "cd services/project-service && python -m build",
    "build:core": "cd shared/core && python -m build",
    "lint": "npm run lint:frontend && npm run lint:backends",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backends": "npm run lint:generation && npm run lint:project && npm run lint:core",
    "lint:generation": "cd services/generation-service && python -m black --check src && python -m isort --check-only src && python -m flake8 src",
    "lint:project": "cd services/project-service && python -m ruff check src",
    "lint:core": "cd shared/core && python -m ruff check src",
    "lint:fix": "npm run lint:fix:frontend && npm run lint:fix:backends",
    "lint:fix:frontend": "cd frontend && npm run lint:fix",
    "lint:fix:backends": "npm run lint:fix:generation && npm run lint:fix:project && npm run lint:fix:core",
    "lint:fix:generation": "cd services/generation-service && python -m black src && python -m isort src",
    "lint:fix:project": "cd services/project-service && python -m ruff check --fix src && python -m black src && python -m isort src",
    "lint:fix:core": "cd shared/core && python -m ruff check --fix src && python -m ruff format src",
    "format": "npm run format:frontend && npm run format:backends",
    "format:frontend": "cd frontend && npm run format",
    "format:backends": "npm run format:generation && npm run format:project && npm run format:core",
    "format:generation": "cd services/generation-service && python -m black src && python -m isort src",
    "format:project": "cd services/project-service && python -m black src && python -m isort src",
    "format:core": "cd shared/core && python -m ruff format src",
    "format:check": "npm run format:check:frontend && npm run format:check:backends",
    "format:check:frontend": "cd frontend && npm run format:check",
    "format:check:backends": "npm run format:check:generation && npm run format:check:project && npm run format:check:core",
    "format:check:generation": "cd services/generation-service && python -m black --check src && python -m isort --check-only src",
    "format:check:project": "cd services/project-service && python -m ruff format --check src && python -m black --check src",
    "format:check:core": "cd shared/core && python -m ruff format --check src",
    "test": "npm run test:frontend",
    "test:frontend": "cd frontend && npm run test",
    "install:all": "npm run install:frontend && npm run install:backends",
    "install:frontend": "cd frontend && npm install",
    "install:backends": "npm run install:generation && npm run install:project && npm run install:core",
    "install:generation": "cd services/generation-service && pip install -e .[dev]",
    "install:project": "cd services/project-service && pip install -e .[dev]",
    "install:core": "cd shared/core && pip install -e .[dev]",
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backends\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backends": "echo 'Backend services need to be started separately'",
    "clean": "npm run clean:frontend && npm run clean:backends",
    "clean:frontend": "cd frontend && rm -rf node_modules dist .vite",
    "clean:backends": "find . -name '*.pyc' -delete && find . -name '__pycache__' -type d -exec rm -rf {} + || true"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "python": ">=3.10.0"
  },
  "keywords": [
    "ai",
    "script-generator",
    "microservices",
    "typescript",
    "python",
    "fastapi",
    "react",
    "type-safety"
  ]
}
